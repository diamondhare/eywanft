/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type MetaMintEUSDStruct = {
  add_c: string;
  expected_min_mint_amount_c: BigNumberish;
  lp_index: BigNumberish;
  add_h: string;
  expected_min_mint_amount_h: BigNumberish;
  to: string;
  initialBridge: string;
  initialChainID: BigNumberish;
};

export type MetaMintEUSDStructOutput = [
  string,
  BigNumber,
  BigNumber,
  string,
  BigNumber,
  string,
  string,
  BigNumber
] & {
  add_c: string;
  expected_min_mint_amount_c: BigNumber;
  lp_index: BigNumber;
  add_h: string;
  expected_min_mint_amount_h: BigNumber;
  to: string;
  initialBridge: string;
  initialChainID: BigNumber;
};

export type PermitDataStruct = {
  v: BigNumberish;
  r: BytesLike;
  s: BytesLike;
  deadline: BigNumberish;
  approveMax: boolean;
};

export type PermitDataStructOutput = [
  number,
  string,
  string,
  BigNumber,
  boolean
] & {
  v: number;
  r: string;
  s: string;
  deadline: BigNumber;
  approveMax: boolean;
};

export type MetaExchangeParamsStruct = {
  add: string;
  exchange: string;
  remove: string;
  expected_min_mint_amount: BigNumberish;
  i: BigNumberish;
  j: BigNumberish;
  expected_min_dy: BigNumberish;
  x: BigNumberish;
  expected_min_amount: BigNumberish;
  to: string;
  chain2address: string;
  receiveSide: string;
  oppositeBridge: string;
  chainID: BigNumberish;
  initialBridge: string;
  initialChainID: BigNumberish;
};

export type MetaExchangeParamsStructOutput = [
  string,
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  string,
  string,
  string,
  BigNumber,
  string,
  BigNumber
] & {
  add: string;
  exchange: string;
  remove: string;
  expected_min_mint_amount: BigNumber;
  i: BigNumber;
  j: BigNumber;
  expected_min_dy: BigNumber;
  x: BigNumber;
  expected_min_amount: BigNumber;
  to: string;
  chain2address: string;
  receiveSide: string;
  oppositeBridge: string;
  chainID: BigNumber;
  initialBridge: string;
  initialChainID: BigNumber;
};

export type MetaRedeemEUSDStruct = {
  remove_c: string;
  x: BigNumberish;
  expected_min_amount_c: BigNumberish;
  remove_h: string;
  token_amount_h: BigNumberish;
  y: BigNumberish;
  expected_min_amount_h: BigNumberish;
  to: string;
};

export type MetaRedeemEUSDStructOutput = [
  string,
  BigNumber,
  BigNumber,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  string
] & {
  remove_c: string;
  x: BigNumber;
  expected_min_amount_c: BigNumber;
  remove_h: string;
  token_amount_h: BigNumber;
  y: BigNumber;
  expected_min_amount_h: BigNumber;
  to: string;
};

export type AddLiquidityStruct = {
  add: string;
  to: string;
  expected_min_mint_amount: BigNumberish;
  initialBridge: string;
  initialChainID: BigNumberish;
};

export type AddLiquidityStructOutput = [
  string,
  string,
  BigNumber,
  string,
  BigNumber
] & {
  add: string;
  to: string;
  expected_min_mint_amount: BigNumber;
  initialBridge: string;
  initialChainID: BigNumber;
};

export interface CurveProxyInterface extends utils.Interface {
  functions: {
    "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])": FunctionFragment;
    "bridge()": FunctionFragment;
    "initialize(address,address,address,address)": FunctionFragment;
    "isTrustedForwarder(address)": FunctionFragment;
    "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])": FunctionFragment;
    "owner()": FunctionFragment;
    "portal()": FunctionFragment;
    "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setPool(address,address,address[])": FunctionFragment;
    "setTrustedForwarder(address)": FunctionFragment;
    "synthesis()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])": FunctionFragment;
    "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])": FunctionFragment;
    "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])": FunctionFragment;
    "trustedForwarder()": FunctionFragment;
    "versionRecipient()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "add_liquidity_3pool_mint_eusd",
    values: [
      MetaMintEUSDStruct,
      PermitDataStruct[],
      [string, string, string],
      [BigNumberish, BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(functionFragment: "bridge", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "meta_exchange",
    values: [
      MetaExchangeParamsStruct,
      PermitDataStruct[],
      [string, string, string],
      [BigNumberish, BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "portal", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "redeem_eusd",
    values: [
      MetaRedeemEUSDStruct,
      PermitDataStruct,
      string,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPool",
    values: [string, string, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setTrustedForwarder",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "synthesis", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transit_synth_batch_add_liquidity_3pool",
    values: [
      AddLiquidityStruct,
      [string, string, string],
      [BigNumberish, BigNumberish, BigNumberish],
      [BytesLike, BytesLike, BytesLike]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transit_synth_batch_add_liquidity_3pool_mint_eusd",
    values: [
      MetaMintEUSDStruct,
      [string, string, string],
      [BigNumberish, BigNumberish, BigNumberish],
      [BytesLike, BytesLike, BytesLike]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transit_synth_batch_meta_exchange",
    values: [
      MetaExchangeParamsStruct,
      [string, string, string],
      [BigNumberish, BigNumberish, BigNumberish],
      [BytesLike, BytesLike, BytesLike]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "versionRecipient",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "add_liquidity_3pool_mint_eusd",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bridge", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "meta_exchange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "portal", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeem_eusd",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTrustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "synthesis", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transit_synth_batch_add_liquidity_3pool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transit_synth_batch_add_liquidity_3pool_mint_eusd",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transit_synth_batch_meta_exchange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "versionRecipient",
    data: BytesLike
  ): Result;

  events: {
    "InconsistencyCallback(address,address,address,uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "InconsistencyCallback"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type InconsistencyCallbackEvent = TypedEvent<
  [string, string, string, BigNumber],
  { pool: string; token: string; to: string; amount: BigNumber }
>;

export type InconsistencyCallbackEventFilter =
  TypedEventFilter<InconsistencyCallbackEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface CurveProxy extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CurveProxyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bridge(overrides?: CallOverrides): Promise<[string]>;

    "bridge()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,address)"(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isTrustedForwarder(address)"(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    meta_exchange(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    portal(overrides?: CallOverrides): Promise<[string]>;

    "portal()"(overrides?: CallOverrides): Promise<[string]>;

    redeem_eusd(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)"(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPool(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setPool(address,address,address[])"(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTrustedForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setTrustedForwarder(address)"(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    synthesis(overrides?: CallOverrides): Promise<[string]>;

    "synthesis()"(overrides?: CallOverrides): Promise<[string]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transit_synth_batch_add_liquidity_3pool(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transit_synth_batch_add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transit_synth_batch_meta_exchange(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    trustedForwarder(overrides?: CallOverrides): Promise<[string]>;

    "trustedForwarder()"(overrides?: CallOverrides): Promise<[string]>;

    versionRecipient(overrides?: CallOverrides): Promise<[string]>;

    "versionRecipient()"(overrides?: CallOverrides): Promise<[string]>;
  };

  add_liquidity_3pool_mint_eusd(
    _params: MetaMintEUSDStruct,
    _permit: PermitDataStruct[],
    _token: [string, string, string],
    _amount: [BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
    _params: MetaMintEUSDStruct,
    _permit: PermitDataStruct[],
    _token: [string, string, string],
    _amount: [BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bridge(overrides?: CallOverrides): Promise<string>;

  "bridge()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _forwarder: string,
    _portal: string,
    _synthesis: string,
    _bridge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,address)"(
    _forwarder: string,
    _portal: string,
    _synthesis: string,
    _bridge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isTrustedForwarder(
    forwarder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isTrustedForwarder(address)"(
    forwarder: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  meta_exchange(
    _params: MetaExchangeParamsStruct,
    _permit: PermitDataStruct[],
    _token: [string, string, string],
    _amount: [BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
    _params: MetaExchangeParamsStruct,
    _permit: PermitDataStruct[],
    _token: [string, string, string],
    _amount: [BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  portal(overrides?: CallOverrides): Promise<string>;

  "portal()"(overrides?: CallOverrides): Promise<string>;

  redeem_eusd(
    _params: MetaRedeemEUSDStruct,
    _permit: PermitDataStruct,
    _receiveSide: string,
    _oppositeBridge: string,
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)"(
    _params: MetaRedeemEUSDStruct,
    _permit: PermitDataStruct,
    _receiveSide: string,
    _oppositeBridge: string,
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPool(
    _pool: string,
    _lp_token: string,
    _coins: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setPool(address,address,address[])"(
    _pool: string,
    _lp_token: string,
    _coins: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTrustedForwarder(
    _forwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setTrustedForwarder(address)"(
    _forwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  synthesis(overrides?: CallOverrides): Promise<string>;

  "synthesis()"(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transit_synth_batch_add_liquidity_3pool(
    _params: AddLiquidityStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
    _params: AddLiquidityStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transit_synth_batch_add_liquidity_3pool_mint_eusd(
    _params: MetaMintEUSDStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])"(
    _params: MetaMintEUSDStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transit_synth_batch_meta_exchange(
    _params: MetaExchangeParamsStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
    _params: MetaExchangeParamsStruct,
    _synth_token: [string, string, string],
    _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
    _txId: [BytesLike, BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  trustedForwarder(overrides?: CallOverrides): Promise<string>;

  "trustedForwarder()"(overrides?: CallOverrides): Promise<string>;

  versionRecipient(overrides?: CallOverrides): Promise<string>;

  "versionRecipient()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<void>;

    "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<void>;

    bridge(overrides?: CallOverrides): Promise<string>;

    "bridge()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address,address)"(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isTrustedForwarder(address)"(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    meta_exchange(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<void>;

    "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    portal(overrides?: CallOverrides): Promise<string>;

    "portal()"(overrides?: CallOverrides): Promise<string>;

    redeem_eusd(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)"(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setPool(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setPool(address,address,address[])"(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    setTrustedForwarder(
      _forwarder: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTrustedForwarder(address)"(
      _forwarder: string,
      overrides?: CallOverrides
    ): Promise<void>;

    synthesis(overrides?: CallOverrides): Promise<string>;

    "synthesis()"(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transit_synth_batch_add_liquidity_3pool(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    transit_synth_batch_add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    transit_synth_batch_meta_exchange(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;

    trustedForwarder(overrides?: CallOverrides): Promise<string>;

    "trustedForwarder()"(overrides?: CallOverrides): Promise<string>;

    versionRecipient(overrides?: CallOverrides): Promise<string>;

    "versionRecipient()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "InconsistencyCallback(address,address,address,uint256)"(
      pool?: null,
      token?: null,
      to?: null,
      amount?: null
    ): InconsistencyCallbackEventFilter;
    InconsistencyCallback(
      pool?: null,
      token?: null,
      to?: null,
      amount?: null
    ): InconsistencyCallbackEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bridge(overrides?: CallOverrides): Promise<BigNumber>;

    "bridge()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize(address,address,address,address)"(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isTrustedForwarder(address)"(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    meta_exchange(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    portal(overrides?: CallOverrides): Promise<BigNumber>;

    "portal()"(overrides?: CallOverrides): Promise<BigNumber>;

    redeem_eusd(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)"(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPool(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setPool(address,address,address[])"(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTrustedForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setTrustedForwarder(address)"(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    synthesis(overrides?: CallOverrides): Promise<BigNumber>;

    "synthesis()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transit_synth_batch_add_liquidity_3pool(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transit_synth_batch_add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transit_synth_batch_meta_exchange(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    trustedForwarder(overrides?: CallOverrides): Promise<BigNumber>;

    "trustedForwarder()"(overrides?: CallOverrides): Promise<BigNumber>;

    versionRecipient(overrides?: CallOverrides): Promise<BigNumber>;

    "versionRecipient()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaMintEUSDStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bridge(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "bridge()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,address)"(
      _forwarder: string,
      _portal: string,
      _synthesis: string,
      _bridge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isTrustedForwarder(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isTrustedForwarder(address)"(
      forwarder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    meta_exchange(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),(uint8,bytes32,bytes32,uint256,bool)[],address[3],uint256[3])"(
      _params: MetaExchangeParamsStruct,
      _permit: PermitDataStruct[],
      _token: [string, string, string],
      _amount: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    portal(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "portal()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeem_eusd(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "redeem_eusd((address,int128,uint256,address,uint256,int128,uint256,address),(uint8,bytes32,bytes32,uint256,bool),address,address,uint256)"(
      _params: MetaRedeemEUSDStruct,
      _permit: PermitDataStruct,
      _receiveSide: string,
      _oppositeBridge: string,
      _chainID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPool(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setPool(address,address,address[])"(
      _pool: string,
      _lp_token: string,
      _coins: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTrustedForwarder(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setTrustedForwarder(address)"(
      _forwarder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    synthesis(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "synthesis()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transit_synth_batch_add_liquidity_3pool(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transit_synth_batch_add_liquidity_3pool((address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: AddLiquidityStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transit_synth_batch_add_liquidity_3pool_mint_eusd(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transit_synth_batch_add_liquidity_3pool_mint_eusd((address,uint256,uint256,address,uint256,address,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaMintEUSDStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transit_synth_batch_meta_exchange(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transit_synth_batch_meta_exchange((address,address,address,uint256,int128,int128,uint256,int128,uint256,address,address,address,address,uint256,address,uint256),address[3],uint256[3],bytes32[3])"(
      _params: MetaExchangeParamsStruct,
      _synth_token: [string, string, string],
      _synth_amount: [BigNumberish, BigNumberish, BigNumberish],
      _txId: [BytesLike, BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    trustedForwarder(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "trustedForwarder()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    versionRecipient(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "versionRecipient()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
