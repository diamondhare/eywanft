/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type NodeStruct = {
  owner: string;
  pool: string;
  nodeIdAddress: string;
  blsPubKey: string;
  nodeId: BigNumberish;
};

export type NodeStructOutput = [string, string, string, string, BigNumber] & {
  owner: string;
  pool: string;
  nodeIdAddress: string;
  blsPubKey: string;
  nodeId: BigNumber;
};

export interface INodeRegistryInterface extends utils.Interface {
  functions: {
    "addNode((address,address,address,string,uint256))": FunctionFragment;
    "checkPermissionTrustList(address)": FunctionFragment;
    "convertToString(address)": FunctionFragment;
    "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)": FunctionFragment;
    "getBLSPubKeys()": FunctionFragment;
    "getNode(address)": FunctionFragment;
    "getNodes()": FunctionFragment;
    "nodeExists(address)": FunctionFragment;
    "setRelayerFee(uint256,address)": FunctionFragment;
    "setRelayerStatus(uint8,address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addNode", values: [NodeStruct]): string;
  encodeFunctionData(
    functionFragment: "checkPermissionTrustList",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "convertToString",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "createRelayer",
    values: [NodeStruct, BigNumberish, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBLSPubKeys",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getNode", values: [string]): string;
  encodeFunctionData(functionFragment: "getNodes", values?: undefined): string;
  encodeFunctionData(functionFragment: "nodeExists", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setRelayerFee",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setRelayerStatus",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "addNode", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checkPermissionTrustList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "convertToString",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createRelayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBLSPubKeys",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNode", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getNodes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nodeExists", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setRelayerFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRelayerStatus",
    data: BytesLike
  ): Result;

  events: {};
}

export interface INodeRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: INodeRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addNode(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addNode((address,address,address,string,uint256))"(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    checkPermissionTrustList(
      _node: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "checkPermissionTrustList(address)"(
      _node: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    convertToString(
      account: string,
      overrides?: CallOverrides
    ): Promise<[string] & { s: string }>;

    "convertToString(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<[string] & { s: string }>;

    createRelayer(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)"(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getBLSPubKeys(overrides?: CallOverrides): Promise<[string[]]>;

    "getBLSPubKeys()"(overrides?: CallOverrides): Promise<[string[]]>;

    getNode(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<[NodeStructOutput]>;

    "getNode(address)"(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<[NodeStructOutput]>;

    getNodes(overrides?: CallOverrides): Promise<[NodeStructOutput[]]>;

    "getNodes()"(overrides?: CallOverrides): Promise<[NodeStructOutput[]]>;

    nodeExists(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "nodeExists(address)"(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setRelayerFee(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setRelayerFee(uint256,address)"(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setRelayerStatus(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setRelayerStatus(uint8,address)"(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addNode(
    node: NodeStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addNode((address,address,address,string,uint256))"(
    node: NodeStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  checkPermissionTrustList(
    _node: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "checkPermissionTrustList(address)"(
    _node: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  convertToString(account: string, overrides?: CallOverrides): Promise<string>;

  "convertToString(address)"(
    account: string,
    overrides?: CallOverrides
  ): Promise<string>;

  createRelayer(
    _node: NodeStruct,
    _deadline: BigNumberish,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)"(
    _node: NodeStruct,
    _deadline: BigNumberish,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getBLSPubKeys(overrides?: CallOverrides): Promise<string[]>;

  "getBLSPubKeys()"(overrides?: CallOverrides): Promise<string[]>;

  getNode(
    _nodeIdAddress: string,
    overrides?: CallOverrides
  ): Promise<NodeStructOutput>;

  "getNode(address)"(
    _nodeIdAddress: string,
    overrides?: CallOverrides
  ): Promise<NodeStructOutput>;

  getNodes(overrides?: CallOverrides): Promise<NodeStructOutput[]>;

  "getNodes()"(overrides?: CallOverrides): Promise<NodeStructOutput[]>;

  nodeExists(_nodeIdAddr: string, overrides?: CallOverrides): Promise<boolean>;

  "nodeExists(address)"(
    _nodeIdAddr: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setRelayerFee(
    _fee: BigNumberish,
    _nodeIdAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setRelayerFee(uint256,address)"(
    _fee: BigNumberish,
    _nodeIdAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setRelayerStatus(
    _status: BigNumberish,
    _nodeIdAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setRelayerStatus(uint8,address)"(
    _status: BigNumberish,
    _nodeIdAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addNode(node: NodeStruct, overrides?: CallOverrides): Promise<void>;

    "addNode((address,address,address,string,uint256))"(
      node: NodeStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    checkPermissionTrustList(
      _node: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "checkPermissionTrustList(address)"(
      _node: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    convertToString(
      account: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "convertToString(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createRelayer(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)"(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getBLSPubKeys(overrides?: CallOverrides): Promise<string[]>;

    "getBLSPubKeys()"(overrides?: CallOverrides): Promise<string[]>;

    getNode(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<NodeStructOutput>;

    "getNode(address)"(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<NodeStructOutput>;

    getNodes(overrides?: CallOverrides): Promise<NodeStructOutput[]>;

    "getNodes()"(overrides?: CallOverrides): Promise<NodeStructOutput[]>;

    nodeExists(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "nodeExists(address)"(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setRelayerFee(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRelayerFee(uint256,address)"(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setRelayerStatus(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRelayerStatus(uint8,address)"(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addNode(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addNode((address,address,address,string,uint256))"(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    checkPermissionTrustList(
      _node: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkPermissionTrustList(address)"(
      _node: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    convertToString(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "convertToString(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createRelayer(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)"(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getBLSPubKeys(overrides?: CallOverrides): Promise<BigNumber>;

    "getBLSPubKeys()"(overrides?: CallOverrides): Promise<BigNumber>;

    getNode(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getNode(address)"(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNodes(overrides?: CallOverrides): Promise<BigNumber>;

    "getNodes()"(overrides?: CallOverrides): Promise<BigNumber>;

    nodeExists(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nodeExists(address)"(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setRelayerFee(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setRelayerFee(uint256,address)"(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setRelayerStatus(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setRelayerStatus(uint8,address)"(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addNode(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addNode((address,address,address,string,uint256))"(
      node: NodeStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    checkPermissionTrustList(
      _node: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkPermissionTrustList(address)"(
      _node: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    convertToString(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "convertToString(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createRelayer(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createRelayer((address,address,address,string,uint256),uint256,uint8,bytes32,bytes32)"(
      _node: NodeStruct,
      _deadline: BigNumberish,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getBLSPubKeys(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getBLSPubKeys()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNode(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getNode(address)"(
      _nodeIdAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNodes(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getNodes()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nodeExists(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nodeExists(address)"(
      _nodeIdAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setRelayerFee(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setRelayerFee(uint256,address)"(
      _fee: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setRelayerStatus(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setRelayerStatus(uint8,address)"(
      _status: BigNumberish,
      _nodeIdAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
