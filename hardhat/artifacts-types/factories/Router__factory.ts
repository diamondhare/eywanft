/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Router, RouterInterface } from "../Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "userFrom",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executionPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "worker",
        type: "address",
      },
    ],
    name: "PaymentEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiveSide",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oppositeBridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "executionPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout",
            type: "uint256",
          },
          {
            internalType: "uint8[2]",
            name: "v",
            type: "uint8[2]",
          },
          {
            internalType: "bytes32[2]",
            name: "r",
            type: "bytes32[2]",
          },
          {
            internalType: "bytes32[2]",
            name: "s",
            type: "bytes32[2]",
          },
        ],
        internalType: "struct Router.DelegatedCallReceipt",
        name: "_receipt",
        type: "tuple",
      },
    ],
    name: "delegatedTokenSynthesize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiveSide",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oppositeBridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "delegatedTokenSynthesize1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pusher",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cf7380380610cf783398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610c64806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639a47aca814610046578063caa8647c1461005b578063e7ee2f2e1461006e575b600080fd5b610059610054366004610963565b6100a5565b005b610059610069366004610a97565b610357565b61009161007c366004610b0f565b60026020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b8051602080830151604080516bffffffffffffffffffffffff1960608e811b82168387015260348301969096528b861b811660548301523390951b9094166068850152607c8085019290925280518085039092018252609c90930190925281519101206000610134610116836103e8565b604085015151606086015151608087015160005b602002015161043b565b90506000610164610144846103e8565b60408601516020908101516060880151909101516080880151600161012a565b6001600160a01b03831660009081526002602052604090205490915060ff166101e65760405162461bcd60e51b815260206004820152602960248201527f476174654b65657065723a20696e76616c6964207369676e617475726520667260448201526837b6903bb7b935b2b960b91b60648201526084015b60405180910390fd5b886001600160a01b0316816001600160a01b0316146102595760405162461bcd60e51b815260206004820152602960248201527f476174654b65657065723a20696e76616c6964207369676e617475726520667260448201526837b69039b2b73232b960b91b60648201526084016101dd565b6102698b8a3387600001516105e4565b600154845161028f918d918c916001600160a01b03169061028a908f610b2a565b6105e4565b8351604080516001600160a01b038e811682526020820193909352828516928c16917f41219a007fbaf8aa3392155e72058f24ca34fa6c6718a80e93f848b1f24710d6910160405180910390a3600154604051630a14c01d60e01b81526001600160a01b0390911690630a14c01d90610318908e908e908e908e908e908e908e90600401610b4f565b600060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b505050505050505050505050505050565b60015461037190889087906001600160a01b0316896105e4565b600154604051630a14c01d60e01b81526001600160a01b0390911690630a14c01d906103ad908a908a908a908a908a908a908a90600401610b4f565b600060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b5050505050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156104b85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101dd565b8360ff16601b14806104cd57508360ff16601c145b6105245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101dd565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610578573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105db5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101dd565b95945050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261063e908590610644565b50505050565b6000610699826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661071b9092919063ffffffff16565b80519091501561071657808060200190518101906106b79190610b91565b6107165760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101dd565b505050565b606061072a8484600085610734565b90505b9392505050565b6060824710156107955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101dd565b843b6107e35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101dd565b600080866001600160a01b031685876040516107ff9190610bdf565b60006040518083038185875af1925050503d806000811461083c576040519150601f19603f3d011682016040523d82523d6000602084013e610841565b606091505b509150915061085182828661085c565b979650505050505050565b6060831561086b57508161072d565b82511561087b5782518084602001fd5b8160405162461bcd60e51b81526004016101dd9190610bfb565b80356001600160a01b03811681146108ac57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156108ea576108ea6108b1565b60405290565b6040805190810167ffffffffffffffff811182821017156108ea576108ea6108b1565b600082601f83011261092457600080fd5b61092c6108f0565b80604084018581111561093e57600080fd5b845b81811015610958578035845260209384019301610940565b509095945050505050565b600080600080600080600080888a036101e081121561098157600080fd5b61098a8a610895565b98506020808b013598506109a060408c01610895565b97506109ae60608c01610895565b96506109bc60808c01610895565b95506109ca60a08c01610895565b945060c08b013593506101008060df19840112156109e757600080fd5b6109ef6108c7565b925060e08c01358352808c013582840152508b61013f8c0112610a1157600080fd5b610a196108f0565b806101608d018e811115610a2c57600080fd5b6101208e015b81811015610a5957803560ff81168114610a4c5760008081fd5b8452928401928401610a32565b50816040860152610a6a8f82610913565b606086015250505050610a818b6101a08c01610913565b6080820152809150509295985092959890939650565b600080600080600080600060e0888a031215610ab257600080fd5b610abb88610895565b965060208801359550610ad060408901610895565b9450610ade60608901610895565b9350610aec60808901610895565b9250610afa60a08901610895565b915060c0880135905092959891949750929550565b600060208284031215610b2157600080fd5b61072d82610895565b600082821015610b4a57634e487b7160e01b600052601160045260246000fd5b500390565b6001600160a01b0397881681526020810196909652938616604086015291851660608501528416608084015290921660a082015260c081019190915260e00190565b600060208284031215610ba357600080fd5b8151801515811461072d57600080fd5b60005b83811015610bce578181015183820152602001610bb6565b8381111561063e5750506000910152565b60008251610bf1818460208701610bb3565b9190910192915050565b6020815260008251806020840152610c1a816040850160208701610bb3565b601f01601f1916919091016040019291505056fea2646970667358221220edcd9a8f61db0d80c69cb37c466469da6b425a411e9d56571bada446528adb5b64736f6c634300080a0033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _portal: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Router> {
    return super.deploy(_portal, overrides || {}) as Promise<Router>;
  }
  getDeployTransaction(
    _portal: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  attach(address: string): Router {
    return super.attach(address) as Router;
  }
  connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
