/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenPaymasterPermitPaymaster,
  TokenPaymasterPermitPaymasterInterface,
} from "../TokenPaymasterPermitPaymaster";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eth",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUseWithoutPost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsedByPost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethActualCharge",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenActualCharge",
        type: "uint256",
      },
    ],
    name: "TokensCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenPrecharge",
        type: "uint256",
      },
    ],
    name: "TokensPrecharged",
    type: "event",
  },
  {
    inputs: [],
    name: "CALLDATA_SIZE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FORWARDER_HUB_OVERHEAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_ACCEPTANCE_BUDGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POST_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRE_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterData",
        type: "bytes",
      },
    ],
    name: "_getToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IUniswap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntil",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pctRelayFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseRelayFee",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
    ],
    name: "_verifyForwarder",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "addBatchTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IUniswap",
        name: "router",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntil",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pctRelayFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseRelayFee",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxPossibleGas",
        type: "uint256",
      },
    ],
    name: "calculatePreCharge",
    outputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenPreCharge",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasUsedByPost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGasAndDataLimits",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "acceptanceBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "calldataSizeLimit",
            type: "uint256",
          },
        ],
        internalType: "struct IPaymaster.GasAndDataLimits",
        name: "limits",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHubAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntil",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pctRelayFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseRelayFee",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
    ],
    name: "getPayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayHubDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "gasUseWithoutPost",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pctRelayFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseRelayFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "relayWorker",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "address",
            name: "forwarder",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "clientId",
            type: "uint256",
          },
        ],
        internalType: "struct GsnTypes.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "postRelayedCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntil",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pctRelayFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseRelayFee",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "approvalData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxPossibleGas",
        type: "uint256",
      },
    ],
    name: "preRelayedCall",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "revertOnRecipientRevert",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "routersMap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasUsedByPost",
        type: "uint256",
      },
    ],
    name: "setPostGasUsage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRelayHub",
        name: "hub",
        type: "address",
      },
    ],
    name: "setRelayHub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IForwarder",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "contract IForwarder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionPaymaster",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawRelayHubDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506125f5806100616000396000f3fe6080604052600436106101c55760003560e01c80637bb05264116100f7578063b90b41cf11610095578063df463a6611610064578063df463a661461059d578063ef1a830e146105b2578063f2fde38b146105e8578063f9c002f71461060857600080fd5b8063b90b41cf14610530578063bbdaa3c914610546578063da7422281461055d578063db3f831e1461057d57600080fd5b8063921276ea116100d1578063921276ea1461047e578063a5dcd07b146104b2578063ad12e50e146104d2578063b039a88f146104e857600080fd5b80637bb05264146104205780637da0a877146104405780638da5cb5b1461046057600080fd5b80635476bd72116101645780636d7c3e2b1161013e5780636d7c3e2b146103ad578063715018a6146103cd57806374e861d6146103e257806376fa01c31461040057600080fd5b80635476bd721461033857806359d3901f146103585780635c5e3db11461039757600080fd5b80632d14c4b7116101a05780632d14c4b7146102805780632f4b3c5c146102a05780633aecd0e3146102e057806341bbb7ca1461030057600080fd5b8062be5dd41461020457806301e336671461023b5780632afe31c11461025d57600080fd5b366101ff576040513481527fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d8555579060200160405180910390a1005b600080fd5b34801561021057600080fd5b5061022461021f366004611af5565b61061f565b604051610232929190611bee565b60405180910390f35b34801561024757600080fd5b5061025b610256366004611c27565b6108e1565b005b34801561026957600080fd5b50610272610a42565b604051908152602001610232565b34801561028c57600080fd5b5061025b61029b366004611c68565b610ab4565b3480156102ac57600080fd5b506102c06102bb366004611cdf565b610b46565b604080516001600160a01b03938416815292909116602083015201610232565b3480156102ec57600080fd5b506102726102fb366004611d74565b610c23565b34801561030c57600080fd5b5061032061031b366004611d98565b610c94565b6040516001600160a01b039091168152602001610232565b34801561034457600080fd5b5061025b610353366004611dd5565b610cae565b34801561036457600080fd5b50610378610373366004611e03565b610d06565b604080516001600160a01b039093168352602083019190915201610232565b3480156103a357600080fd5b5061027261290481565b3480156103b957600080fd5b5061025b6103c8366004611e6d565b610ed8565b3480156103d957600080fd5b5061025b610f07565b3480156103ee57600080fd5b506001546001600160a01b0316610320565b34801561040c57600080fd5b5061025b61041b366004611e94565b610f7b565b34801561042c57600080fd5b5061025b61043b366004611d74565b611009565b34801561044c57600080fd5b50600254610320906001600160a01b031681565b34801561046c57600080fd5b506000546001600160a01b0316610320565b34801561048a57600080fd5b5060408051808201825260058152640322e322e360dc1b602082015290516102329190611f24565b3480156104be57600080fd5b5061025b6104cd366004611d98565b611055565b3480156104de57600080fd5b5061027260045481565b3480156104f457600080fd5b506104fd6110dc565b60405161023291908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b34801561053c57600080fd5b5061027261c35081565b34801561055257600080fd5b506102726201adb081565b34801561056957600080fd5b5061025b610578366004611d74565b611138565b34801561058957600080fd5b5061025b610598366004611fcf565b611184565b3480156105a957600080fd5b5061027261124e565b3480156105be57600080fd5b506103206105cd366004611d74565b6003602052600090815260409020546001600160a01b031681565b3480156105f457600080fd5b5061025b610603366004611d74565b611260565b34801561061457600080fd5b50610272620186a081565b606060006106356001546001600160a01b031690565b6001600160a01b0316336001600160a01b03161461069a5760405162461bcd60e51b815260206004820152601e60248201527f63616e206f6e6c792062652063616c6c65642062792052656c6179487562000060448201526064015b60405180910390fd5b6000806106f56106ad60208c018c612033565b6106bb9060c0810190612053565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b4692505050565b9150915060008061070884848e8a610d06565b909250905060058811156107cc576000806000806000808e8e81019061072e919061209a565b60405163d505accf60e01b81526001600160a01b038088166004830152306024830152604482018790526064820186905260ff8516608483015260a4820184905260c48201839052969c50949a5092985090965094509250908b169063d505accf9060e401600060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b505050505050505050505b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015610821573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084591906120fc565b50604080516001600160a01b038087168252851660208201529081018290527fe9731c78e6c09448d873967301d14a46ffe6276ae410c52ad99f5c8b1b47faf09060600160405180910390a1604080516001600160a01b0380851660208301529181018390528186166060820152908416608082015260a00160408051601f198184030181529190529c60009c509a5050505050505050505050565b6000546001600160a01b0316331461090b5760405162461bcd60e51b815260040161069190612119565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610976919061214e565b9050808211156109c85760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e5061796d61737465722f42616c616e636520746f206c6f772e00006044820152606401610691565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b91906120fc565b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaf919061214e565b905090565b6000546001600160a01b03163314610ade5760405162461bcd60e51b815260040161069190612119565b600154604051627b8a6760e11b8152600481018490526001600160a01b0383811660248301529091169062f714ce90604401600060405180830381600087803b158015610b2a57600080fd5b505af1158015610b3e573d6000803e3d6000fd5b505050505050565b600080600083806020019051810190610b5f9190612167565b6001600160a01b03808216600081815260036020526040902054929350911690610bcb5760405162461bcd60e51b815260206004820152601f60248201527f5468697320746f6b656e206e6f7420737570706f7274656420617320666565006044820152606401610691565b6001600160a01b038116610c195760405162461bcd60e51b8152602060048201526015602482015274111bd95cc9dd081cdd5c1c1bdc9d1959081c1bdbdb605a1b6044820152606401610691565b9094909350915050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e919061214e565b92915050565b6000610ca08280612184565b610c8e906020810190611d74565b6000546001600160a01b03163314610cd85760405162461bcd60e51b815260040161069190612119565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6040516320dddbe560e11b8152600090819030906341bbb7ca90610d2e9087906004016122cc565b602060405180830381865afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6f9190612167565b6001549092506000906001600160a01b0316638e53548b85610d946020890189612033565b6040518363ffffffff1660e01b8152600401610db19291906123a1565b602060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df2919061214e565b9050610dfe8580612184565b610e0c9060400135826123d0565b9050610e1981888861134a565b6040516370a0823160e01b81526001600160a01b038581166004830152919350908816906370a0823190602401602060405180830381865afa158015610e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e87919061214e565b821115610ece5760405162461bcd60e51b8152602060048201526015602482015274746f6b656e2062616c616e636520746f6f206c6f7760581b6044820152606401610691565b5094509492505050565b6000546001600160a01b03163314610f025760405162461bcd60e51b815260040161069190612119565b600455565b6000546001600160a01b03163314610f315760405162461bcd60e51b815260040161069190612119565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b03163314610fd55760405162461bcd60e51b815260206004820152601e60248201527f63616e206f6e6c792062652063616c6c65642062792052656c617948756200006044820152606401610691565b6000808080610fe6888a018a6123e8565b9350935093509350610ffe84846000898987876114c4565b505050505050505050565b6000546001600160a01b031633146110335760405162461bcd60e51b815260040161069190612119565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6110626020820182612033565b6110739060c081019060a001611d74565b6002546001600160a01b039081169116146110d05760405162461bcd60e51b815260206004820152601860248201527f466f72776172646572206973206e6f74207472757374656400000000000000006044820152606401610691565b6110d9816115dc565b50565b6111076040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180608001604052806203d090815260200162030d408152602001620334508152602001612904815250905090565b6000546001600160a01b031633146111625760405162461bcd60e51b815260040161069190612119565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146111ae5760405162461bcd60e51b815260040161069190612119565b60005b8251811015611249578181815181106111cc576111cc61243b565b6020026020010151600360008584815181106111ea576111ea61243b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061124190612451565b9150506111b1565b505050565b61125d61c350620186a06123d0565b81565b6000546001600160a01b0316331461128a5760405162461bcd60e51b815260040161069190612119565b6001600160a01b0381166112ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610691565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160028082526060820183526000928392919060208301908036833701905050905083816000815181106113835761138361243b565b60200260200101906001600160a01b031690816001600160a01b031681525050826001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114059190612167565b816001815181106114185761141861243b565b6001600160a01b0392831660209182029290920101526040516307c0329d60e21b8152600091851690631f00ca749061145790899086906004016124b0565b600060405180830381865afa158015611474573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261149c91908101906124c9565b9050806000815181106114b1576114b161243b565b6020026020010151925050509392505050565b6001546004546000916001600160a01b031690638e53548b906114e790886123d0565b866040518363ffffffff1660e01b81526004016115059291906123a1565b602060405180830381865afa158015611522573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611546919061214e565b9050600061155e61155783896123d0565b858561134a565b9050600061156c828a61255a565b90506115798a86836117c0565b6115858383878761186f565b6004546040805189815260208101929092528101849052606081018390527fb3d69ff8981e297b4ab7fb9ba8e8a080ffebbee9f273bfa2d10116a8236830459060800160405180910390a150505050505050505050565b6000806115e98380612184565b6115fa906040810190602001611d74565b6001600160a01b031663572b6c0560e01b6116186020860186612033565b6116299060c081019060a001611d74565b6040516001600160a01b03909116602482015260440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161167d9190612571565b600060405180830381855afa9150503d80600081146116b8576040519150601f19603f3d011682016040523d82523d6000602084013e6116bd565b606091505b50915091508161170f5760405162461bcd60e51b815260206004820152601c60248201527f697354727573746564466f727761726465723a207265766572746564000000006044820152606401610691565b80516020146117605760405162461bcd60e51b815260206004820181905260248201527f697354727573746564466f727761726465723a2062616420726573706f6e73656044820152606401610691565b8080602001905181019061177491906120fc565b6112495760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420666f7277617264657220666f7220726563697069656e74006044820152606401610691565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af115801561180f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183391906120fc565b6112495760405162461bcd60e51b815260206004820152600d60248201526c19985a5b1959081c99599d5b99609a1b6044820152606401610691565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106118a4576118a461243b565b60200260200101906001600160a01b031690816001600160a01b031681525050816001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119269190612167565b816001815181106119395761193961243b565b6001600160a01b03928316602091820292909201015260405163095ea7b360e01b8152838216600482015260001960248201529084169063095ea7b3906044016020604051808303816000875af1158015611998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bc91906120fc565b506001600160a01b0382166318cbafe5858784306119dc426103846123d0565b6040518663ffffffff1660e01b81526004016119fc959493929190612583565b600060405180830381600087803b158015611a1657600080fd5b505af1158015611a2a573d6000803e3d6000fd5b505060015460405163aa67c91960e01b81523060048201526001600160a01b03909116925063aa67c919915087906024016000604051808303818588803b158015611a7457600080fd5b505af1158015611a88573d6000803e3d6000fd5b50505050505050505050565b600060408284031215611aa657600080fd5b50919050565b60008083601f840112611abe57600080fd5b50813567ffffffffffffffff811115611ad657600080fd5b602083019150836020828501011115611aee57600080fd5b9250929050565b60008060008060008060808789031215611b0e57600080fd5b863567ffffffffffffffff80821115611b2657600080fd5b611b328a838b01611a94565b97506020890135915080821115611b4857600080fd5b611b548a838b01611aac565b90975095506040890135915080821115611b6d57600080fd5b50611b7a89828a01611aac565b979a9699509497949695606090950135949350505050565b60005b83811015611bad578181015183820152602001611b95565b83811115611bbc576000848401525b50505050565b60008151808452611bda816020860160208601611b92565b601f01601f19169290920160200192915050565b604081526000611c016040830185611bc2565b905082151560208301529392505050565b6001600160a01b03811681146110d957600080fd5b600080600060608486031215611c3c57600080fd5b8335611c4781611c12565b92506020840135611c5781611c12565b929592945050506040919091013590565b60008060408385031215611c7b57600080fd5b823591506020830135611c8d81611c12565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611cd757611cd7611c98565b604052919050565b60006020808385031215611cf257600080fd5b823567ffffffffffffffff80821115611d0a57600080fd5b818501915085601f830112611d1e57600080fd5b813581811115611d3057611d30611c98565b611d42601f8201601f19168501611cae565b91508082528684828501011115611d5857600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215611d8657600080fd5b8135611d9181611c12565b9392505050565b600060208284031215611daa57600080fd5b813567ffffffffffffffff811115611dc157600080fd5b611dcd84828501611a94565b949350505050565b60008060408385031215611de857600080fd5b8235611df381611c12565b91506020830135611c8d81611c12565b60008060008060808587031215611e1957600080fd5b8435611e2481611c12565b93506020850135611e3481611c12565b9250604085013567ffffffffffffffff811115611e5057600080fd5b611e5c87828801611a94565b949793965093946060013593505050565b600060208284031215611e7f57600080fd5b5035919050565b80151581146110d957600080fd5b600080600080600060808688031215611eac57600080fd5b853567ffffffffffffffff80821115611ec457600080fd5b611ed089838a01611aac565b909750955060208801359150611ee582611e86565b9093506040870135925060608701359080821115611f0257600080fd5b5086016101008189031215611f1657600080fd5b809150509295509295909350565b602081526000611d916020830184611bc2565b600067ffffffffffffffff821115611f5157611f51611c98565b5060051b60200190565b600082601f830112611f6c57600080fd5b81356020611f81611f7c83611f37565b611cae565b82815260059290921b84018101918181019086841115611fa057600080fd5b8286015b84811015611fc4578035611fb781611c12565b8352918301918301611fa4565b509695505050505050565b60008060408385031215611fe257600080fd5b823567ffffffffffffffff80821115611ffa57600080fd5b61200686838701611f5b565b9350602085013591508082111561201c57600080fd5b5061202985828601611f5b565b9150509250929050565b6000823560fe1983360301811261204957600080fd5b9190910192915050565b6000808335601e1984360301811261206a57600080fd5b83018035915067ffffffffffffffff82111561208557600080fd5b602001915036819003821315611aee57600080fd5b60008060008060008060c087890312156120b357600080fd5b86356120be81611c12565b95506020870135945060408701359350606087013560ff811681146120e257600080fd5b9598949750929560808101359460a0909101359350915050565b60006020828403121561210e57600080fd5b8151611d9181611e86565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561216057600080fd5b5051919050565b60006020828403121561217957600080fd5b8151611d9181611c12565b6000823560de1983360301811261204957600080fd5b6000808335601e198436030181126121b157600080fd5b830160208101925035905067ffffffffffffffff8111156121d157600080fd5b803603831315611aee57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000823560fe1983360301811261221f57600080fd5b90910192915050565b6000610100823584526020830135602085015260408301356040850152606083013561225381611c12565b6001600160a01b03908116606086015260808401359061227282611c12565b16608085015260a083013561228681611c12565b6001600160a01b031660a08501526122a160c084018461219a565b8260c08701526122b483870182846121e0565b9250505060e083013560e08501528091505092915050565b602081526000823560de198436030181126122e657600080fd5b60406020840152830180356122fa81611c12565b6001600160a01b03908116606085015260208201359061231982611c12565b80821660808601525050604081013560a0840152606081013560c0840152608081013560e084015261234e60a082018261219a565b60e0610100860152612365610140860182846121e0565b91505060c08201356101208501526123806020860186612209565b848203601f1901604086015291506123988183612228565b95945050505050565b828152604060208201526000611dcd6040830184612228565b634e487b7160e01b600052601160045260246000fd5b600082198211156123e3576123e36123ba565b500190565b600080600080608085870312156123fe57600080fd5b843561240981611c12565b935060208501359250604085013561242081611c12565b9150606085013561243081611c12565b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612465576124656123ba565b5060010190565b600081518084526020808501945080840160005b838110156124a55781516001600160a01b031687529582019590820190600101612480565b509495945050505050565b828152604060208201526000611dcd604083018461246c565b600060208083850312156124dc57600080fd5b825167ffffffffffffffff8111156124f357600080fd5b8301601f8101851361250457600080fd5b8051612512611f7c82611f37565b81815260059190911b8201830190838101908783111561253157600080fd5b928401925b8284101561254f57835182529284019290840190612536565b979650505050505050565b60008282101561256c5761256c6123ba565b500390565b60008251612049818460208701611b92565b85815284602082015260a0604082015260006125a260a083018661246c565b6001600160a01b039490941660608301525060800152939250505056fea26469706673582212200decbf8b66fdc5575ad27f8e16efc4f86aa21e60f687da6cab75b9e7fb318e9764736f6c634300080a0033";

type TokenPaymasterPermitPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterPermitPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymasterPermitPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterPermitPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenPaymasterPermitPaymaster> {
    return super.deploy(
      overrides || {}
    ) as Promise<TokenPaymasterPermitPaymaster>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenPaymasterPermitPaymaster {
    return super.attach(address) as TokenPaymasterPermitPaymaster;
  }
  connect(signer: Signer): TokenPaymasterPermitPaymaster__factory {
    return super.connect(signer) as TokenPaymasterPermitPaymaster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterPermitPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterPermitPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymasterPermitPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenPaymasterPermitPaymaster;
  }
}
