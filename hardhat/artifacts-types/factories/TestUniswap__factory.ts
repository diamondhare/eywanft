/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestUniswap, TestUniswapInterface } from "../TestUniswap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateMult",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rateDiv",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
    ],
    name: "getTokenToEthInputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
    ],
    name: "getTokenToEthOutputPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "pu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rateDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateMult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "out",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwapOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "tokenToEthTransferOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "out",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051610b90380380610b90833981016040819052610022916100df565b600183905560028290553461007e5760405162461bcd60e51b815260206004820152601660248201527f6d7573742073706563696679206c69717569646974790000000000000000000060448201526064015b60405180910390fd5b60015415801590610090575060025415155b6100cb5760405162461bcd60e51b815260206004820152600c60248201526b3130b21036bab63a163234bb60a11b6044820152606401610075565b6001600160a01b0316608052506101259050565b6000806000606084860312156100f457600080fd5b83516020850151604086015191945092506001600160a01b038116811461011a57600080fd5b809150509250925092565b608051610a5061014060003960006102630152610a506000f3fe6080604052600436106100ab5760003560e01c806395b68fe71161006457806395b68fe7146101a75780639e6b26ba146101c7578063aa38e3f5146101e7578063ad5c464814610251578063aec036a114610285578063f129496a1461029b57600080fd5b8063044215c6146100b757806314f38115146100f457806318cbafe5146101185780631f00ca741461013a5780632640f62c14610167578063409268501461018757600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d23660046106a2565b6102bb565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010057600080fd5b5061010a60015481565b6040519081526020016100eb565b34801561012457600080fd5b506101386101333660046106e3565b6102e5565b005b34801561014657600080fd5b5061015a61015536600461079b565b6103f3565b6040516100eb919061086c565b34801561017357600080fd5b5061010a6101823660046106a2565b610479565b34801561019357600080fd5b5061010a6101a23660046108b0565b61049c565b3480156101b357600080fd5b5061010a6101c23660046106a2565b610578565b3480156101d357600080fd5b506100d76101e23660046106a2565b61058b565b3480156101f357600080fd5b506101386102023660046108eb565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0392909216919091179055565b34801561025d57600080fd5b506100d77f000000000000000000000000000000000000000000000000000000000000000081565b34801561029157600080fd5b5061010a60025481565b3480156102a757600080fd5b5061010a6102b636600461090f565b6105ba565b600081815481106102cb57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006102f086610479565b905085471161031a5760405162461bcd60e51b815260040161031190610965565b60405180910390fd5b8484600081811061032d5761032d610993565b905060200201602081019061034291906108eb565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906109a9565b50604051339087156108fc029088906000818181858888f193505050501580156103e9573d6000803e3d6000fd5b5050505050505050565b604080516002808252606080830184529260009291906020830190803683370190505090506002546001548561042991906109cb565b61043391906109f8565b8160008151811061044657610446610993565b60200260200101818152505060008160018151811061046757610467610993565b60209081029190910101529392505050565b60006002546001548361048c91906109cb565b61049691906109f8565b92915050565b6000806104a885610479565b90508447116104c95760405162461bcd60e51b815260040161031190610965565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038716906323b872dd906064016020604051808303816000875af115801561051c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054091906109a9565b50604051339086156108fc029087906000818181858888f1935050505015801561056e573d6000803e3d6000fd5b5095945050505050565b60006001546002548361048c91906109cb565b600080828154811061059f5761059f610993565b6000918252602090912001546001600160a01b031692915050565b60008447116105db5760405162461bcd60e51b815260040161031190610965565b60006105e686610479565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038816906323b872dd906064016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906109a9565b506040516001600160a01b0384169087156108fc029088906000818181858888f19350505050158015610697573d6000803e3d6000fd5b509695505050505050565b6000602082840312156106b457600080fd5b5035919050565b6001600160a01b03811681146106d057600080fd5b50565b80356106de816106bb565b919050565b60008060008060008060a087890312156106fc57600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561072257600080fd5b818901915089601f83011261073657600080fd5b81358181111561074557600080fd5b8a60208260051b850101111561075a57600080fd5b602083019650809550505050610772606088016106d3565b9150608087013590509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107ae57600080fd5b8235915060208084013567ffffffffffffffff808211156107ce57600080fd5b818601915086601f8301126107e257600080fd5b8135818111156107f4576107f4610785565b8060051b604051601f19603f8301168101818110858211171561081957610819610785565b60405291825284820192508381018501918983111561083757600080fd5b938501935b8285101561085c5761084d856106d3565b8452938501939285019261083c565b8096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156108a457835183529284019291840191600101610888565b50909695505050505050565b600080600080608085870312156108c657600080fd5b84356108d1816106bb565b966020860135965060408601359560600135945092505050565b6000602082840312156108fd57600080fd5b8135610908816106bb565b9392505050565b600080600080600060a0868803121561092757600080fd5b8535610932816106bb565b94506020860135935060408601359250606086013591506080860135610957816106bb565b809150509295509295909350565b6020808252601490820152736e6f7420656e6f756768206c697175696469747960601b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109bb57600080fd5b8151801515811461090857600080fd5b60008160001904831182151516156109f357634e487b7160e01b600052601160045260246000fd5b500290565b600082610a1557634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a43773739e443d8cd3a5ac15f0b282f658466d6fd5b6187e744230f149f02f6364736f6c634300080a0033";

type TestUniswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswap__factory extends ContractFactory {
  constructor(...args: TestUniswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _rateMult: BigNumberish,
    _rateDiv: BigNumberish,
    _WETH: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<TestUniswap> {
    return super.deploy(
      _rateMult,
      _rateDiv,
      _WETH,
      overrides || {}
    ) as Promise<TestUniswap>;
  }
  getDeployTransaction(
    _rateMult: BigNumberish,
    _rateDiv: BigNumberish,
    _WETH: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rateMult,
      _rateDiv,
      _WETH,
      overrides || {}
    );
  }
  attach(address: string): TestUniswap {
    return super.attach(address) as TestUniswap;
  }
  connect(signer: Signer): TestUniswap__factory {
    return super.connect(signer) as TestUniswap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapInterface {
    return new utils.Interface(_abi) as TestUniswapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswap {
    return new Contract(address, _abi, signerOrProvider) as TestUniswap;
  }
}
