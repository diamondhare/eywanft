/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FrontHelper, FrontHelperInterface } from "../FrontHelper";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct FrontHelper.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
    ],
    name: "lpTokensInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lp",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
        ],
        internalType: "struct FrontHelper.LpInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct FrontHelper.TokenInfo",
        name: "token0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct FrontHelper.TokenInfo",
        name: "token1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct FrontHelper.TokenInfo",
        name: "pair",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint112",
            name: "reserve0",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "reserve1",
            type: "uint112",
          },
        ],
        internalType: "struct FrontHelper.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "pairAddress",
        type: "address[]",
      },
    ],
    name: "poolsInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct FrontHelper.TokenInfo",
            name: "token0",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct FrontHelper.TokenInfo",
            name: "token1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct FrontHelper.TokenInfo",
            name: "pair",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint112",
                name: "reserve0",
                type: "uint112",
              },
              {
                internalType: "uint112",
                name: "reserve1",
                type: "uint112",
              },
            ],
            internalType: "struct FrontHelper.PoolInfo",
            name: "pool",
            type: "tuple",
          },
        ],
        internalType: "struct FrontHelper.PoolsInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct FrontHelper.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "tokensInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct FrontHelper.TokenInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611abd806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806393b2cfd81161005b57806393b2cfd8146100ec578063a6de46281461010c578063d3e5ca871461012c578063e1b7cebd1461014c57600080fd5b8063252dba421461008257806350e284fd146100ac57806358f594a8146100cc575b600080fd5b610095610090366004611200565b61016f565b6040516100a3929190611397565b60405180910390f35b6100bf6100ba36600461144c565b6102ae565b6040516100a391906114fc565b6100df6100da36600461155e565b610377565b6040516100a3919061164c565b6100ff6100fa366004611702565b61077b565b6040516100a39190611743565b61011f61011a3660046117ab565b610a85565b6040516100a391906117e4565b61013f61013a36600461144c565b610cb5565b6040516100a391906117fe565b61015f61015a3660046117ab565b610dcb565b6040516100a39493929190611842565b805143906060906001600160401b0381111561018d5761018d611130565b6040519080825280602002602001820160405280156101c057816020015b60608152602001906001900390816101ab5790505b50905060005b83518110156102a8576000808583815181106101e4576101e4611894565b6020026020010151600001516001600160a01b031686848151811061020b5761020b611894565b60200260200101516020015160405161022491906118aa565b6000604051808303816000865af19150503d8060008114610261576040519150601f19603f3d011682016040523d82523d6000602084013e610266565b606091505b50915091508161027557600080fd5b8084848151811061028857610288611894565b6020026020010181905250505080806102a0906118c6565b9150506101c6565b50915091565b6060816000816001600160401b038111156102cb576102cb611130565b60405190808252806020026020018201604052801561030457816020015b6102f16110a7565b8152602001906001900390816102e95790505b50905060005b8281101561036d5761033d8787878481811061032857610328611894565b905060200201602081019061011a91906118ef565b82828151811061034f5761034f611894565b60200260200101819052508080610365906118c6565b91505061030a565b5095945050505050565b6060600082516001600160401b0381111561039457610394611130565b6040519080825280602002602001820160405280156103cd57816020015b6103ba6110d9565b8152602001906001900390816103b25790505b50905060005b8351811015610773576104068482815181106103f1576103f1611894565b602002602001015163ffffffff903b16151590565b61044b5760405162461bcd60e51b81526020600482015260116024820152701b9bdb8818dbdb9d1c9858dd0818d85b1b607a1b60448201526064015b60405180910390fd5b600084828151811061045f5761045f611894565b602090810291909101810151604080516004815260248101825292830180516001600160e01b031663c45a015560e01b179052516001600160a01b03909116916104a8916118aa565b600060405180830381855afa9150503d80600081146104e3576040519150601f19603f3d011682016040523d82523d6000602084013e6104e8565b606091505b50509050806105095760405162461bcd60e51b81526004016104429061190c565b600085838151811061051d5761051d611894565b60200260200101519050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611971565b50915091506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f591906119c1565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b91906119c1565b90506106808b8b898151811061067357610673611894565b6020026020010151610a85565b88888151811061069257610692611894565b6020026020010151604001819052506106ab8b83610a85565b8888815181106106bd576106bd611894565b6020908102919091010151526106d38b82610a85565b8888815181106106e5576106e5611894565b6020026020010151602001819052506040518060800160405280836001600160a01b03168152602001826001600160a01b03168152602001856001600160701b03168152602001846001600160701b031681525088888151811061074b5761074b611894565b602002602001015160600181905250505050505050808061076b906118c6565b9150506103d3565b509392505050565b6060816000816001600160401b0381111561079857610798611130565b6040519080825280602002602001820160405280156107e357816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816107b65790505b50905060005b82811015610a7c5761082786868381811061080657610806611894565b905060200201602081019061081b91906118ef565b3b63ffffffff16151590565b15610a6a57600086868381811061084057610840611894565b905060200201602081019061085591906118ef565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290516001600160a01b03929092169161089691906118aa565b600060405180830381855afa9150503d80600081146108d1576040519150601f19603f3d011682016040523d82523d6000602084013e6108d6565b606091505b505090508015610a685760405180606001604052808888858181106108fd576108fd611894565b905060200201602081019061091291906118ef565b6001600160a01b0316815260200188888581811061093257610932611894565b905060200201602081019061094791906118ef565b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a891906119c1565b6001600160a01b031681526020018888858181106109c8576109c8611894565b90506020020160208101906109dd91906118ef565b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e91906119c1565b6001600160a01b0316815250838381518110610a5c57610a5c611894565b60200260200101819052505b505b80610a74816118c6565b9150506107e9565b50949350505050565b610a8d6110a7565b6040518060a00160405280836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ad6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610afe91908101906119de565b8152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b6991908101906119de565b8152602001836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611a4b565b60ff168152602001836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a9190611a6e565b81526040516370a0823160e01b81526001600160a01b0386811660048301526020909201918516906370a0823190602401602060405180830381865afa158015610c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cac9190611a6e565b90529392505050565b6060816000816001600160401b03811115610cd257610cd2611130565b604051908082528060200260200182016040528015610cfb578160200160208202803683370190505b50905060005b8281101561036d57858582818110610d1b57610d1b611894565b9050602002016020810190610d3091906118ef565b6040516370a0823160e01b81526001600160a01b03898116600483015291909116906370a0823190602401602060405180830381865afa158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c9190611a6e565b828281518110610dae57610dae611894565b602090810291909101015280610dc3816118c6565b915050610d01565b610dd36110a7565b610ddb6110a7565b610de36110a7565b604080516080810182526000808252602082018190529181018290526060810191909152843b63ffffffff16610e4f5760405162461bcd60e51b81526020600482015260116024820152701b9bdb8818dbdb9d1c9858dd0818d85b1b607a1b6044820152606401610442565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290516000916001600160a01b03881691610e9191906118aa565b600060405180830381855afa9150503d8060008114610ecc576040519150601f19603f3d011682016040523d82523d6000602084013e610ed1565b606091505b5050905080610ef25760405162461bcd60e51b81526004016104429061190c565b6000869050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190611971565b50915091506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc591906119c1565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b91906119c1565b90506110378c8c610a85565b97506110438c83610a85565b995061104f8c82610a85565b98506040518060800160405280836001600160a01b03168152602001826001600160a01b03168152602001856001600160701b03168152602001846001600160701b0316815250965050505050505092959194509250565b6040518060a001604052806060815260200160608152602001600060ff16815260200160008152602001600081525090565b60405180608001604052806110ec6110a7565b81526020016110f96110a7565b81526020016111066110a7565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561116857611168611130565b60405290565b604051601f8201601f191681016001600160401b038111828210171561119657611196611130565b604052919050565b60006001600160401b038211156111b7576111b7611130565b5060051b60200190565b6001600160a01b03811681146111d657600080fd5b50565b60006001600160401b038211156111f2576111f2611130565b50601f01601f191660200190565b6000602080838503121561121357600080fd5b82356001600160401b038082111561122a57600080fd5b818501915085601f83011261123e57600080fd5b813561125161124c8261119e565b61116e565b81815260059190911b8301840190848101908883111561127057600080fd5b8585015b8381101561132e5780358581111561128c5760008081fd5b86016040818c03601f19018113156112a45760008081fd5b6112ac611146565b898301356112b9816111c1565b815282820135888111156112cd5760008081fd5b8084019350508c603f8401126112e35760008081fd5b898301356112f361124c826111d9565b8181528e848387010111156113085760008081fd5b818486018d83013760009181018c0191909152818b015285525050918601918601611274565b5098975050505050505050565b60005b8381101561135657818101518382015260200161133e565b83811115611365576000848401525b50505050565b6000815180845261138381602086016020860161133b565b601f01601f19169290920160200192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156113f357605f198887030184526113e186835161136b565b955092840192908401906001016113c5565b509398975050505050505050565b60008083601f84011261141357600080fd5b5081356001600160401b0381111561142a57600080fd5b6020830191508360208260051b850101111561144557600080fd5b9250929050565b60008060006040848603121561146157600080fd5b833561146c816111c1565b925060208401356001600160401b0381111561148757600080fd5b61149386828701611401565b9497909650939450505050565b6000815160a084526114b560a085018261136b565b9050602083015184820360208601526114ce828261136b565b91505060ff604084015116604085015260608301516060850152608083015160808501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561155157603f1988860301845261153f8583516114a0565b94509285019290850190600101611523565b5092979650505050505050565b6000806040838503121561157157600080fd5b823561157c816111c1565b91506020838101356001600160401b0381111561159857600080fd5b8401601f810186136115a957600080fd5b80356115b761124c8261119e565b81815260059190911b820183019083810190888311156115d657600080fd5b928401925b828410156115fd5783356115ee816111c1565b825292840192908401906115db565b80955050505050509250929050565b80516001600160a01b039081168352602080830151909116908301526040808201516001600160701b039081169184019190915260609182015116910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156116f457603f19898403018552815160e08151818652611699828701826114a0565b915050888201518582038a8701526116b182826114a0565b91505087820151858203898701526116c982826114a0565b91505060608083015192506116e08187018461160c565b509588019593505090860190600101611673565b509098975050505050505050565b6000806020838503121561171557600080fd5b82356001600160401b0381111561172b57600080fd5b61173785828601611401565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561179e57815180516001600160a01b0390811686528782015181168887015290860151168585015260609093019290850190600101611760565b5091979650505050505050565b600080604083850312156117be57600080fd5b82356117c9816111c1565b915060208301356117d9816111c1565b809150509250929050565b6020815260006117f760208301846114a0565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156118365783518352928401929184019160010161181a565b50909695505050505050565b60e08152600061185560e08301876114a0565b828103602084015261186781876114a0565b9050828103604084015261187b81866114a0565b91505061188b606083018461160c565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b600082516118bc81846020870161133b565b9190910192915050565b60006000198214156118e857634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561190157600080fd5b81356117f7816111c1565b60208082526029908201527f6661696c656420746f206964656e7469667920746865206f726967696e206f66604082015268081d1a19481c1bdbdb60ba1b606082015260800190565b80516001600160701b038116811461196c57600080fd5b919050565b60008060006060848603121561198657600080fd5b61198f84611955565b925061199d60208501611955565b9150604084015163ffffffff811681146119b657600080fd5b809150509250925092565b6000602082840312156119d357600080fd5b81516117f7816111c1565b6000602082840312156119f057600080fd5b81516001600160401b03811115611a0657600080fd5b8201601f81018413611a1757600080fd5b8051611a2561124c826111d9565b818152856020838501011115611a3a57600080fd5b61188b82602083016020860161133b565b600060208284031215611a5d57600080fd5b815160ff811681146117f757600080fd5b600060208284031215611a8057600080fd5b505191905056fea2646970667358221220b6841b6a9d97a759cc7978fd58072aa46d4d09c067e34a034ca52e535c1e059a64736f6c634300080a0033";

type FrontHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FrontHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FrontHelper__factory extends ContractFactory {
  constructor(...args: FrontHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FrontHelper> {
    return super.deploy(overrides || {}) as Promise<FrontHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FrontHelper {
    return super.attach(address) as FrontHelper;
  }
  connect(signer: Signer): FrontHelper__factory {
    return super.connect(signer) as FrontHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FrontHelperInterface {
    return new utils.Interface(_abi) as FrontHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FrontHelper {
    return new Contract(address, _abi, signerOrProvider) as FrontHelper;
  }
}
